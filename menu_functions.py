import asyncio
import aiogram
import random
import os
import logging
from aiogram import Bot, Dispatcher, types
import openai
import asyncio
import logging
import sys
from aiogram import Bot, Dispatcher, html, Router, BaseMiddleware, types
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command
from aiogram.filters.state import StateFilter
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, FSInputFile, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery, InputMediaPhoto, InputMediaVideo
from openai import AsyncOpenAI, OpenAI
# from stickerlist import STICKERLIST
import shelve
import json

from functions import *
from functions2 import *

class UserState(StatesGroup):
    info_coll = State()
    recognition = State()
    redact = State()
    yapp_new = State()
    yapp = State()
    menu = State()
    saving_confirmation = State()
    saving = State()

################## MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU ##################

async def menu_handler(message, state) -> None:
    await state.update_data(full_sequence=False)
    buttons = [
        [InlineKeyboardButton(text="üìö –ö—É—Ä—Å:", callback_data="menu_course")],
        [InlineKeyboardButton(text="üçΩ –î–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è:", callback_data="menu_dnevnik")],
        [InlineKeyboardButton(text="üí¨  –ù—É—Ç—Ä–∏:", callback_data="menu_nutri")],
        [InlineKeyboardButton(text="‚öôÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ:", callback_data="menu_settings")],
        ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "–ú–µ–Ω—é"
    await message.answer(step0txt, reply_markup=keyboard)

async def menu_back_handler(callback_query, state) -> None:
    await state.update_data(full_sequence=False)
    buttons = [
        [InlineKeyboardButton(text="üìö –ö—É—Ä—Å:", callback_data="menu_course")],
        [InlineKeyboardButton(text="üçΩ –î–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è:", callback_data="menu_dnevnik")],
        [InlineKeyboardButton(text="üí¨  –ù—É—Ç—Ä–∏:", callback_data="menu_nutri")],
        [InlineKeyboardButton(text="‚öôÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ:", callback_data="menu_settings")],
        ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "–ú–µ–Ω—é"
    try:
        await callback_query.message.edit_text(step0txt, reply_markup=keyboard)
    except Exception as e:
        await callback_query.message.answer(step0txt, reply_markup=keyboard)

async def menu_cb_handler(callback_query, state) -> None:
    await state.update_data(full_sequence=False)
    buttons = [
        [InlineKeyboardButton(text="üìö –ö—É—Ä—Å:", callback_data="menu_course")],
        [InlineKeyboardButton(text="üçΩ –î–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è:", callback_data="menu_dnevnik")],
        [InlineKeyboardButton(text="üí¨  –ù—É—Ç—Ä–∏:", callback_data="menu_nutri")],
        [InlineKeyboardButton(text="‚öôÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ:", callback_data="menu_settings")],
        ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "–ú–µ–Ω—é"
    await callback_query.message.answer(step0txt, reply_markup=keyboard)

async def process_menu_course(message, state):
    buttons = [
        [InlineKeyboardButton(text="üìñ–ù–∞—á–∞—Ç—å –£—Ä–æ–∫ X", callback_data="menu_course_lesson_x")],
        [InlineKeyboardButton(text="‚úèÔ∏è –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞", callback_data="menu_course_info")],
        [InlineKeyboardButton(text="‚èèÔ∏è", callback_data="menu_back")],
        ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "üìö –ö—É—Ä—Å:"
    try:
        await message.edit_text(step0txt, reply_markup=keyboard)
    except Exception as e:
        await message.answer(step0txt, reply_markup=keyboard)
    # await callback_query.message.answer(step0txt, reply_markup=keyboard)

async def process_menu_dnevnik(message, state):
    buttons = [
        [InlineKeyboardButton(text="üçΩ –ó–∞–Ω–µ—Å—Ç–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫", callback_data="menu_dnevnik_input")],
        [InlineKeyboardButton(text="üîÑ–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="menu_dnevnik_redact")],
        [InlineKeyboardButton(text="üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="menu_dnevnik_analysis")],
        [InlineKeyboardButton(text="üì∏ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="menu_dnevnik_instruction")],
        [InlineKeyboardButton(text="‚èèÔ∏è", callback_data="menu_back")],
        ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "üçΩ –î–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è:"
    try:
        await message.edit_text(step0txt, reply_markup=keyboard)
    except Exception as e:
        await message.answer(step0txt, reply_markup=keyboard)
    # await callback_query.message.answer(step0txt, reply_markup=keyboard)

async def process_menu_nutri(message, state):
    buttons = [
        [InlineKeyboardButton(text="üåø –°–ø—Ä–æ—Å–∏—Ç—å –ù—É—Ç—Ä–∏", callback_data="menu_nutri_yapp")],
        [InlineKeyboardButton(text="üë©‚Äçüç≥ –†–µ—Ü–µ–ø—Ç", callback_data="menu_nutri_reciepie")],
        [InlineKeyboardButton(text="üîç –ê–Ω–∞–ª–∏–∑ —ç—Ç–∏–∫–µ—Ç–∫–∏", callback_data="menu_nutri_etiketka")],
        [InlineKeyboardButton(text="‚èèÔ∏è", callback_data="menu_back")],
        ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "üí¨  –ù—É—Ç—Ä–∏:"
    try:
        await message.edit_text(step0txt, reply_markup=keyboard)
    except Exception as e:
        await message.answer(step0txt, reply_markup=keyboard)
    # await callback_query.message.answer(step0txt, reply_markup=keyboard)

async def process_menu_settings(message, state):
    buttons = [
        [InlineKeyboardButton(text="üìå –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å", callback_data="menu_settings_profile")],
        [InlineKeyboardButton(text="üÜò –ü–æ–º–æ—â—å", callback_data="menu_settings_help")],
        [InlineKeyboardButton(text="üí∞ –£—Å–ª–æ–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="menu_settings_sub")],
        [InlineKeyboardButton(text="‚èèÔ∏è", callback_data="menu_back")],
        ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "‚öôÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ:"
    try:
        await message.edit_text(step0txt, reply_markup=keyboard)
    except Exception as e:
        await message.answer(step0txt, reply_markup=keyboard)
    # await callback_query.message.answer(step0txt, reply_markup=keyboard)
################## MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU MENU ##################

################## COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU ##################

async def process_menu_course_lesson(callback_query, state):
    step0txt = "–í—ã–±–∏—Ä–∞–π —É—Ä–æ–∫"
    buttons = [
        [InlineKeyboardButton(text='–£—Ä–æ–∫1', callback_data='d1')],
        [InlineKeyboardButton(text='–£—Ä–æ–∫2', callback_data='d2'), InlineKeyboardButton(text='–£—Ä–æ–∫2_2', callback_data='d2_2')],
        [InlineKeyboardButton(text='–£—Ä–æ–∫2', callback_data='d3'), InlineKeyboardButton(text='–£—Ä–æ–∫3_2', callback_data='d3_2')],
        [InlineKeyboardButton(text='–£—Ä–æ–∫2', callback_data='d4'), InlineKeyboardButton(text='–£—Ä–æ–∫4_2', callback_data='d4_2')],
        [InlineKeyboardButton(text='–£—Ä–æ–∫2', callback_data='d5'), InlineKeyboardButton(text='–£—Ä–æ–∫5_2', callback_data='d5_2')]
    ]
    await callback_query.message.edit_text(step0txt, reply_markup=InlineKeyboardMarkup(inline_keyboard=buttons))

async def process_menu_course_info(callback_query, state):
    buttons = [
        [InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —É—Ä–æ–∫–∏", callback_data="menu_course_info_lessons")],
        [InlineKeyboardButton(text="‚óÄÔ∏è", callback_data="menu_course"), 
         InlineKeyboardButton(text="‚èèÔ∏è", callback_data="menu_back")],
        ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "üíö –ù–∞ –ø–µ—Ä–≤–æ–π –Ω–µ–¥–µ–ª–µ —Ç—ã –∑–∞–º–µ—Ç–∏—à—å –ø–∏—â–µ–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –º–µ—à–∞—é—Ç. \nüíú –ù–∞ –≤—Ç–æ—Ä–æ–π –ø–æ–ª—É—á–∏—à—å –±–∞–∑—É –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫. \n‚ù§Ô∏è –ù–∞ —Ç—Ä–µ—Ç—å–µ–π –∑–∞–∫—Ä–µ–ø–∏—à—å –Ω–æ–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ –∏ –Ω–∞—á–Ω—ë—à—å –ø—Ä–∏–º–µ–Ω—è—Ç—å –∏—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏."
    step1txt = "–°–µ–π—á–∞—Å —Ç—ã –Ω–∞ X —É—Ä–æ–∫–µ —ç—Ç–∞–ø–∞ X üß°"
    step2txt = "X —É—Ä–æ–∫–æ–≤ –∏–∑ 21 –¥–Ω—è –ø—Ä–æ–π–¥–µ–Ω–æ üí™  –û—Å—Ç–∞–ª–æ—Å—å X —É—Ä–æ–∫–æ–≤"
    await callback_query.message.edit_text(step0txt, reply_markup=None)
    await callback_query.message.answer(step1txt)
    await callback_query.message.answer(step2txt, reply_markup=keyboard)

################## COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU COURSE_MENU ##################

################## DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU ##################

async def process_menu_dnevnik_input(callback_query, state):
    step0txt = "–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –µ–¥—ã.\n–¢–∞–∫–∂–µ –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è üé§ –∞—É–¥–∏–æ –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–æ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n<i>–Ø–∏—á–Ω–∏—Ü–∞ –∏–∑ 2 —è–∏—Ü, —á–∞–π –±–µ–∑ —Å–∞—Ö–∞—Ä–∞</i>"
    await callback_query.message.edit_text(step0txt, reply_markup=None)

async def process_menu_dnevnik_redact(callback_query, state):
    step0txt = "in dev"
    await callback_query.message.edit_text(step0txt, reply_markup=None)

async def process_menu_dnevnik_analysis(callback_query, state):
    buttons = [
        [InlineKeyboardButton(text="–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ –∑–∞ –Ω–µ–¥–µ–ª—é", callback_data="menu_dnevnik_analysis_graph")],
        [InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –ø–∏—â–∏ –∑–∞ –Ω–µ–¥–µ–ª—é", callback_data="menu_dnevnik_analysis_rate-week")],
        [InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∑–∞ 5 –¥–Ω–µ–π", callback_data="menu_dnevnik_analysis_5day")],
        [InlineKeyboardButton(text="‚óÄÔ∏è", callback_data="menu_dnevnik"), 
         InlineKeyboardButton(text="‚èèÔ∏è", callback_data="menu_back")],
        ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "<b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</b> üçΩ\n\n–î–Ω–µ–≤–Ω–∞—è —Ü–µ–ª—å: X –∫–∫–∞–ª., X –≥. –±–µ–ª–∫–∏, X –≥. –∂–∏—Ä—ã, X –≥. —É–≥–ª–µ–≤–æ–¥—ã üí™.   \n\n–°–µ–≥–æ–¥–Ω—è –≤—ã —Å—ä–µ–ª–∏: \nX –∫–∫–∞–ª üî•.   \n\n–ë–µ–ª–∫–∏: X –≥. \n–ñ–∏—Ä—ã: X –≥. \n–£–≥–ª–µ–≤–æ–¥—ã:X –≥.   \n\n–¢—ã –º–æ–∂–µ—à—å —Å—ä–µ—Å—Ç—å –µ—â–µ 582 –∫–∫–∞–ª."
    await callback_query.message.edit_text(step0txt, reply_markup=keyboard)

async def process_menu_dnevnik_instruction(callback_query, state):
    # buttons = [
    #     [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data="menu_dnevnik_instruction_")],
    #     [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ—Ä–º—É –ö–ö–ê–õ", callback_data="menu_dnevnik_instruction_")],
    #     [InlineKeyboardButton(text="–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ", callback_data="menu_dnevnik_instruction_")],
    #     [InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="menu_dnevnik_instruction_")],
    #     ]
    # keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "in dev"
    await callback_query.message.edit_text(step0txt, reply_markup=None)

################## DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU DNEVNIK_MENU ##################

################## YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU ##################

async def process_menu_nutri_yapp(callback_query, state):
    await state.set_state(UserState.yapp_new)
    step0txt = "–ó–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Å—Ç–∏ –ø–∏—Ç–∞–Ω–∏—è. –¢–µ–∫—Å—Ç–æ–º –∏–ª–∏ üé§ –∞—É–¥–∏–æ\n–ù–∞–ø—Ä–∏–º–µ—Ä: <i>–ö–∞–∫–∏–µ –ø–µ—Ä–µ–∫—É—Å—ã —Ç—ã –º–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—à—å –∏—Å—Ö–æ–¥—è –∏–∑ –º–æ–µ–π —Ü–µ–ª–∏?</i>"
    await callback_query.message.edit_text(step0txt, reply_markup=None)





async def process_menu_nutri_reciepie(callback_query, state):
    # buttons = [
    #     [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data="menu_nutri_reciepie_")],
    #     [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ—Ä–º—É –ö–ö–ê–õ", callback_data="menu_nutri_reciepie_")],
    #     [InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="menu_nutri_reciepie_")],
    #     ]
    # keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "in dev"
    await callback_query.message.edit_text(step0txt, reply_markup=None)

async def process_menu_nutri_etiketka(callback_query, state):
    step0txt = "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ —Å —ç—Ç–∏–∫–µ—Ç–∫–æ–π –ª—é–±–æ–≥–æ —Ç–æ–≤–∞—Ä–∞. –Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–æ—Å—Ç–∞–≤ –∑–∞ —Ç–µ–±—è –∏ –Ω–∞–ø–∏—à—É, –µ—Å—Ç—å –ª–∏ –≤ –Ω—ë–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö —Å—Ç–æ–∏—Ç –æ–ø–∞—Å–∞—Ç—å—Å—è üîç   \n\n–ü–æ–¥—Å–∫–∞–∑–∫–∞üí° \n<i>–î–µ–ª–∞–π —Ñ–æ—Ç–æ —Å–æ—Å—Ç–∞–≤–∞, –Ω–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞. \n–§–æ—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–µ—Ç–∫–∏–º –±–µ–∑ –±–ª–∏–∫–æ–≤, –Ω–∞ —Ä–æ–≤–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏</i>"
    await callback_query.message.edit_text(step0txt, reply_markup=None)

################## YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU YAPP_MENU ##################

################## SETTINGS_MENU SETTINGS_MENU SETTINGS_MENU SETTINGS_MENU SETTINGS_MENU SETTINGS_MENU SETTINGS_MENU SETTINGS_MENU ##################

async def process_menu_settings_profile(callback_query, state):
    buttons = [
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data="menu_settings_profile_name")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ—Ä–º—É –ö–ö–ê–õ", callback_data="menu_settings_profile_kkal")],
        [InlineKeyboardButton(text="–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ", callback_data="menu_settings_profile_re-anket")],
        [InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="menu_settings_profile_notif")],
        [InlineKeyboardButton(text="‚óÄÔ∏è", callback_data="menu_settings"), 
         InlineKeyboardButton(text="‚èèÔ∏è", callback_data="menu_back")],
        ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "<b>–ò–º—è, –≤–æ—Ç —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Ü–µ–ª—å, –∫ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –∏–¥—ë—à—å:</b>   \n\n–ü–æ–ª: –ù–µ —É–∫–∞–∑–∞–Ω \n–í–æ–∑—Ä–∞—Å—Ç: 0 –ª–µ—Ç \n–í–µ—Å: 0 –∫–≥ \n–†–æ—Å—Ç: 0 —Å–º     \n\n–¶–µ–ª—å: (–ø–æ—Ö—É–¥–µ—Ç—å –∏ —Ç–¥) \n–¶–µ–ª–µ–≤–æ–π –≤–µ—Å: 0 –∫–≥   \n\n–¢–µ–∫—É—â–∞—è –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π: 0 –∫–∫–∞–ª \n–¢–µ–∫—É—â–∞—è –Ω–æ—Ä–º–∞ –ë–ñ–£: x –≥ –±–µ–ª–∫–æ–≤, x –≥ –∂–∏—Ä–æ–≤, x –≥ —É–≥–ª–µ–≤–æ–¥–æ–≤ \n–£—Ä–æ–≤–µ–Ω—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: 0 —á–∞—Å–æ–≤"
    await callback_query.message.edit_text(step0txt, reply_markup=keyboard)

async def process_menu_settings_help(callback_query, state):
    buttons = [
        [InlineKeyboardButton(text="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="menu_settings_help_question")],
        [InlineKeyboardButton(text="‚óÄÔ∏è", callback_data="menu_settings"), 
         InlineKeyboardButton(text="‚èèÔ∏è", callback_data="menu_back")],
        ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "–†–∞—Å—Å–∫–∞–∂–∏, —Å —á–µ–º –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã? \n–ü–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ"
    await callback_query.message.edit_text(step0txt, reply_markup=keyboard)

async def process_menu_settings_sub(callback_query, state):
    buttons = [
        [InlineKeyboardButton(text="üìå –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å", callback_data="menu_settings_profile")],
        [InlineKeyboardButton(text="üÜò –ü–æ–º–æ—â—å", callback_data="menu_settings_help")],
        [InlineKeyboardButton(text="üí∞ –£—Å–ª–æ–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="menu_settings_sub")],
        [InlineKeyboardButton(text="‚óÄÔ∏è", callback_data="menu_settings"), 
         InlineKeyboardButton(text="‚èèÔ∏è", callback_data="menu_back")],
        ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    step0txt = "–¢–≤–æ–π —Ç–µ–∫—É—â–∏–π —Ç–∞—Ä–∏—Ñ:   \n\n‚òëÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–∏—Å –ù—É—Ç—Ä–∏ –Ω–∞ X –º–µ—Å \n‚òëÔ∏è–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:  X \n‚òëÔ∏è –î–∞—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è: X"
    await callback_query.message.edit_text(step0txt, reply_markup=keyboard)

################## SETTINGS_MENU SETTINGS_MENU SETTINGS_MENU SETTINGS_MENU SETTINGS_MENU SETTINGS_MENU SETTINGS_MENU SETTINGS_MENU ##################
